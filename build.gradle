plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

tasks.register('runInDockerCompose') {
	dependsOn bootRun
	group 'run in docker compose'
	description 'run in docker compose'
	if (project.hasProperty('port')) {
		// println "Received debug port of ${project.getProperty('port')}"
		var argument = """-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:${project.getProperty('port')}"""
		println argument
		bootRun {
			systemProperties = System.properties
			jvmArgs = [argument]
		}
	} else {
		print("Please pass -Pport='<portNumber>' as an argument")
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}
